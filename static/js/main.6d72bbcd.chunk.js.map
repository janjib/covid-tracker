{"version":3,"sources":["Title.js","countrylist.js","DataOutput.js","Dropdown.js","App.js","reportWebVitals.js","index.js"],"names":["Title","className","countryList","DataOutput","selectedCountry","useState","covidData","setCovidData","loading","setLoading","fetchCovidData","country","a","axios","get","resp","console","log","data","active","todayCases","recovered","deaths","error","useEffect","Card","Body","Dropdown","setSelectedCountry","name","id","value","onChange","e","target","map","item","index","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAUeA,EARD,WACV,OACI,8BACI,qBAAIC,UAAU,yBAAd,6BAAuD,mBAAGA,UAAU,8B,6BCLnEC,EAAc,CACvB,cACA,mBACA,UACA,UACA,iBACA,UACA,SACA,WACA,aACA,sBACA,YACA,UACA,QACA,YACA,UACA,aACA,gBACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,mCACA,mCACA,yBACA,WACA,gBACA,SACA,uCACA,oBACA,WACA,eACA,UACA,aACA,WACA,WACA,SACA,uBACA,iCACA,OACA,QACA,QACA,mBACA,gCACA,WACA,gBACA,yCACA,cACA,qBACA,aACA,UACA,OACA,aACA,SACA,UACA,mBACA,UACA,WACA,WACA,2BACA,UACA,QACA,cACA,oBACA,UACA,UACA,WACA,WACA,oCACA,sBACA,OACA,UACA,SACA,gBACA,mBACA,oCACA,QACA,eACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,aACA,OACA,YACA,WACA,SACA,gBACA,SACA,QACA,oCACA,iBACA,WACA,YACA,UACA,UACA,QACA,YACA,6BACA,OACA,UACA,cACA,SACA,QACA,UACA,QACA,SACA,SACA,aACA,QACA,WACA,8CACA,0BACA,SACA,aACA,yCACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,QACA,aACA,SACA,WACA,WACA,OACA,QACA,yBACA,aACA,aACA,YACA,UACA,SACA,mCACA,4BACA,SACA,WACA,aACA,aACA,UACA,aACA,UACA,UACA,QACA,QACA,oBACA,gBACA,cACA,YACA,cACA,UACA,OACA,iBACA,iCACA,SACA,OACA,WACA,QACA,sBACA,SACA,mBACA,WACA,OACA,oBACA,WACA,SACA,WACA,cACA,QACA,8BACA,UACA,2BACA,SACA,aACA,sBACA,+CACA,wBACA,cACA,6BACA,4BACA,mCACA,QACA,aACA,wBACA,eACA,UACA,SACA,aACA,eACA,YACA,4BACA,WACA,WACA,kBACA,UACA,eACA,+CACA,cACA,QACA,YACA,cAC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","file":"static/js/main.6d72bbcd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Title = () => {\r\n    return (\r\n        <div>\r\n            <h1 className='text-center my-5 title'>COVID-19 TRACKER<i className=\"mx-2 fas fa-viruses\"></i></h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title\r\n","export const countryList = [\r\n    \"Afghanistan\",\r\n    \"Åland Islands\",\r\n    \"Albania\",\r\n    \"Algeria\",\r\n    \"American Samoa\",\r\n    \"Andorra\",\r\n    \"Angola\",\r\n    \"Anguilla\",\r\n    \"Antarctica\",\r\n    \"Antigua and Barbuda\",\r\n    \"Argentina\",\r\n    \"Armenia\",\r\n    \"Aruba\",\r\n    \"Australia\",\r\n    \"Austria\",\r\n    \"Azerbaijan\",\r\n    \"Bahamas (the)\",\r\n    \"Bahrain\",\r\n    \"Bangladesh\",\r\n    \"Barbados\",\r\n    \"Belarus\",\r\n    \"Belgium\",\r\n    \"Belize\",\r\n    \"Benin\",\r\n    \"Bermuda\",\r\n    \"Bhutan\",\r\n    \"Bolivia (Plurinational State of)\",\r\n    \"Bonaire, Sint Eustatius and Saba\",\r\n    \"Bosnia and Herzegovina\",\r\n    \"Botswana\",\r\n    \"Bouvet Island\",\r\n    \"Brazil\",\r\n    \"British Indian Ocean Territory (the)\",\r\n    \"Brunei Darussalam\",\r\n    \"Bulgaria\",\r\n    \"Burkina Faso\",\r\n    \"Burundi\",\r\n    \"Cabo Verde\",\r\n    \"Cambodia\",\r\n    \"Cameroon\",\r\n    \"Canada\",\r\n    \"Cayman Islands (the)\",\r\n    \"Central African Republic (the)\",\r\n    \"Chad\",\r\n    \"Chile\",\r\n    \"China\",\r\n    \"Christmas Island\",\r\n    \"Cocos (Keeling) Islands (the)\",\r\n    \"Colombia\",\r\n    \"Comoros (the)\",\r\n    \"Congo (the Democratic Republic of the)\",\r\n    \"Congo (the)\",\r\n    \"Cook Islands (the)\",\r\n    \"Costa Rica\",\r\n    \"Croatia\",\r\n    \"Cuba\",\r\n    \"Curaçao\",\r\n    \"Cyprus\",\r\n    \"Czechia\",\r\n    \"Côte d'Ivoire\",\r\n    \"Denmark\",\r\n    \"Djibouti\",\r\n    \"Dominica\",\r\n    \"Dominican Republic (the)\",\r\n    \"Ecuador\",\r\n    \"Egypt\",\r\n    \"El Salvador\",\r\n    \"Equatorial Guinea\",\r\n    \"Eritrea\",\r\n    \"Estonia\",\r\n    \"Eswatini\",\r\n    \"Ethiopia\",\r\n    \"Falkland Islands (the) [Malvinas]\",\r\n    \"Faroe Islands (the)\",\r\n    \"Fiji\",\r\n    \"Finland\",\r\n    \"France\",\r\n    \"French Guiana\",\r\n    \"French Polynesia\",\r\n    \"French Southern Territories (the)\",\r\n    \"Gabon\",\r\n    \"Gambia (the)\",\r\n    \"Georgia\",\r\n    \"Germany\",\r\n    \"Ghana\",\r\n    \"Gibraltar\",\r\n    \"Greece\",\r\n    \"Greenland\",\r\n    \"Grenada\",\r\n    \"Guadeloupe\",\r\n    \"Guam\",\r\n    \"Guatemala\",\r\n    \"Guernsey\",\r\n    \"Guinea\",\r\n    \"Guinea-Bissau\",\r\n    \"Guyana\",\r\n    \"Haiti\",\r\n    \"Heard Island and McDonald Islands\",\r\n    \"Holy See (the)\",\r\n    \"Honduras\",\r\n    \"Hong Kong\",\r\n    \"Hungary\",\r\n    \"Iceland\",\r\n    \"India\",\r\n    \"Indonesia\",\r\n    \"Iran (Islamic Republic of)\",\r\n    \"Iraq\",\r\n    \"Ireland\",\r\n    \"Isle of Man\",\r\n    \"Israel\",\r\n    \"Italy\",\r\n    \"Jamaica\",\r\n    \"Japan\",\r\n    \"Jersey\",\r\n    \"Jordan\",\r\n    \"Kazakhstan\",\r\n    \"Kenya\",\r\n    \"Kiribati\",\r\n    \"Korea (the Democratic People's Republic of)\",\r\n    \"Korea (the Republic of)\",\r\n    \"Kuwait\",\r\n    \"Kyrgyzstan\",\r\n    \"Lao People's Democratic Republic (the)\",\r\n    \"Latvia\",\r\n    \"Lebanon\",\r\n    \"Lesotho\",\r\n    \"Liberia\",\r\n    \"Libya\",\r\n    \"Liechtenstein\",\r\n    \"Lithuania\",\r\n    \"Luxembourg\",\r\n    \"Macao\",\r\n    \"Madagascar\",\r\n    \"Malawi\",\r\n    \"Malaysia\",\r\n    \"Maldives\",\r\n    \"Mali\",\r\n    \"Malta\",\r\n    \"Marshall Islands (the)\",\r\n    \"Martinique\",\r\n    \"Mauritania\",\r\n    \"Mauritius\",\r\n    \"Mayotte\",\r\n    \"Mexico\",\r\n    \"Micronesia (Federated States of)\",\r\n    \"Moldova (the Republic of)\",\r\n    \"Monaco\",\r\n    \"Mongolia\",\r\n    \"Montenegro\",\r\n    \"Montserrat\",\r\n    \"Morocco\",\r\n    \"Mozambique\",\r\n    \"Myanmar\",\r\n    \"Namibia\",\r\n    \"Nauru\",\r\n    \"Nepal\",\r\n    \"Netherlands (the)\",\r\n    \"New Caledonia\",\r\n    \"New Zealand\",\r\n    \"Nicaragua\",\r\n    \"Niger (the)\",\r\n    \"Nigeria\",\r\n    \"Niue\",\r\n    \"Norfolk Island\",\r\n    \"Northern Mariana Islands (the)\",\r\n    \"Norway\",\r\n    \"Oman\",\r\n    \"Pakistan\",\r\n    \"Palau\",\r\n    \"Palestine, State of\",\r\n    \"Panama\",\r\n    \"Papua New Guinea\",\r\n    \"Paraguay\",\r\n    \"Peru\",\r\n    \"Philippines (the)\",\r\n    \"Pitcairn\",\r\n    \"Poland\",\r\n    \"Portugal\",\r\n    \"Puerto Rico\",\r\n    \"Qatar\",\r\n    \"Republic of North Macedonia\",\r\n    \"Romania\",\r\n    \"Russian Federation (the)\",\r\n    \"Rwanda\",\r\n    \"Réunion\",\r\n    \"Saint Barthélemy\",\r\n    \"Saint Helena, Ascension and Tristan da Cunha\",\r\n    \"Saint Kitts and Nevis\",\r\n    \"Saint Lucia\",\r\n    \"Saint Martin (French part)\",\r\n    \"Saint Pierre and Miquelon\",\r\n    \"Saint Vincent and the Grenadines\",\r\n    \"Samoa\",\r\n    \"San Marino\",\r\n    \"Sao Tome and Principe\",\r\n    \"Saudi Arabia\",\r\n    \"Senegal\",\r\n    \"Serbia\",\r\n    \"Seychelles\",\r\n    \"Sierra Leone\",\r\n    \"Singapore\",\r\n    \"Sint Maarten (Dutch part)\",\r\n    \"Slovakia\",\r\n    \"Slovenia\",\r\n    \"Solomon Islands\",\r\n    \"Somalia\",\r\n    \"South Africa\",\r\n    \"South Georgia and the South Sandwich Islands\",\r\n    \"South Sudan\",\r\n    \"Spain\",\r\n    \"Sri Lanka\",\r\n    \"Sudan (the)\",\r\n    \"Suriname\",\r\n    \"Svalbard and Jan Mayen\",\r\n    \"Sweden\",\r\n    \"Switzerland\",\r\n    \"Syrian Arab Republic\",\r\n    \"Taiwan (Province of China)\",\r\n    \"Tajikistan\",\r\n    \"Tanzania, United Republic of\",\r\n    \"Thailand\",\r\n    \"Timor-Leste\",\r\n    \"Togo\",\r\n    \"Tokelau\",\r\n    \"Tonga\",\r\n    \"Trinidad and Tobago\",\r\n    \"Tunisia\",\r\n    \"Turkey\",\r\n    \"Turkmenistan\",\r\n    \"Turks and Caicos Islands (the)\",\r\n    \"Tuvalu\",\r\n    \"Uganda\",\r\n    \"Ukraine\",\r\n    \"United Arab Emirates (the)\",\r\n    \"United Kingdom of Great Britain and Northern Ireland (the)\",\r\n    \"United States Minor Outlying Islands (the)\",\r\n    \"United States of America (the)\",\r\n    \"Uruguay\",\r\n    \"Uzbekistan\",\r\n    \"Vanuatu\",\r\n    \"Venezuela (Bolivarian Republic of)\",\r\n    \"Viet Nam\",\r\n    \"Virgin Islands (British)\",\r\n    \"Virgin Islands (U.S.)\",\r\n    \"Wallis and Futuna\",\r\n    \"Western Sahara\",\r\n    \"Yemen\",\r\n    \"Zambia\",\r\n    \"Zimbabwe\"\r\n  ];","import React, { useEffect,useState } from 'react'\r\nimport {Card} from 'react-bootstrap'\r\nimport axios from 'axios'\r\n\r\nconst DataOutput = ({selectedCountry}) => {\r\n\r\n    const [covidData,setCovidData] = useState(null)\r\n    const [loading,setLoading] = useState(true)\r\n\r\n    // https://disease.sh/v3/covid-19/countries/{country}\r\n\r\n    const fetchCovidData = async (country) => {\r\n        try {\r\n            const resp = await axios.get(`https://disease.sh/v3/covid-19/countries/${country}`);\r\n            console.log(resp.data)\r\n            setCovidData({\r\n                active:resp.data.active,\r\n                todayCases : resp.data.todayCases,\r\n                recovered : resp.data.recovered,\r\n                deaths : resp.data.deaths\r\n            })\r\n            setLoading(false)\r\n            console.log(covidData)\r\n          \r\n            \r\n        } catch (err) {\r\n            // Handle Error Here\r\n            console.error(err,'There is an error !');\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n     fetchCovidData(selectedCountry)\r\n\r\n    },[selectedCountry])\r\n\r\n    return (\r\n         <>\r\n        \r\n        {!loading && \r\n\r\n            <div className='my-5'>\r\n\r\n        <Card className='my-2 data-card'>\r\n            <div className='d-flex justify-content-between'>\r\n            <Card.Body className='w-50 data_title'><i className=\"mx-2 fas fa-virus\"></i>TOTAL CASES</Card.Body>\r\n            <Card.Body className='text-center data_value'>{covidData.active}</Card.Body>\r\n            </div>\r\n         </Card>\r\n\r\n        <Card className='my-2 data-card'>\r\n            <div className='d-flex justify-content-between'>\r\n            <Card.Body className='w-50 data_title'><i className=\"mx-2 fas fa-calendar-day\"></i>TODAY CASES</Card.Body>\r\n            <Card.Body className='text-center data_value'>{covidData.todayCases}</Card.Body>\r\n            </div>\r\n         </Card>\r\n         \r\n        <Card className='my-2 data-card'>\r\n            <div className='d-flex justify-content-between'>\r\n            <Card.Body className='w-50 data_title'><i className=\"mx-2 fas fa-skull-crossbones\"></i>DEATHS</Card.Body>\r\n            <Card.Body className='text-center data_value'>{covidData.deaths}</Card.Body>\r\n            </div>\r\n         </Card>\r\n\r\n        <Card className='my-2 data-card'>\r\n            <div className='d-flex justify-content-between'>\r\n            <Card.Body className='w-50 data_title'><i className=\"mx-2 fas fa-diagnoses\"></i>RECOVERED</Card.Body>\r\n            <Card.Body className='text-center data_value'>{covidData.recovered}</Card.Body>\r\n            </div>\r\n         </Card>\r\n        \r\n    </div>\r\n}\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default DataOutput\r\n","import React, { useState } from 'react'\r\nimport {countryList} from './countrylist'\r\nimport DataOutput from './DataOutput'\r\n\r\nconst Dropdown = () => {\r\n\r\n    const [selectedCountry,setSelectedCountry] = useState('Malaysia')\r\n\r\n    const handleChange = e => {\r\n        setSelectedCountry(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className='text-center'>\r\n            <select \r\n            name=\"country\" id='country' \r\n            value={selectedCountry}\r\n            onChange={handleChange}\r\n            className='select_dropdown'>\r\n\r\n                {countryList.map((item,index)=>{\r\n                    return <option key={index} value={item}\r\n                     className='select_dropdown_option'>\r\n                        {item}\r\n                        </option>\r\n                })}\r\n  \r\n</select>\r\n        </div>\r\n        <DataOutput selectedCountry={selectedCountry}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dropdown\r\n","\n\nimport Title from './Title';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Container } from 'react-bootstrap';\nimport Dropdown from './Dropdown'\n\nfunction App() {\n  return (\n    <Container>\n    <div className=\"App\">\n      <Title />\n      <Dropdown />\n      \n    </div>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}